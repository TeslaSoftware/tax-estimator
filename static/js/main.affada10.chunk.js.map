{"version":3,"sources":["DataEntrySection.js","constants.js","InputNumber.js","RadioGroup.js","SectionContentDeductionMode.js","SectionContentDependants.js","SectionContentFilingStatus.js","SectionContentW2.js","SectionContentOtherDeductions.js","utils.js","colors.js","GraphRenderer.js","TaxResultsContainer.js","logger.js","graphDataSetGenerator.js","taxBrackets2019.js","taxModel2019.js","App.js","serviceWorker.js","index.js"],"names":["DataEntrySection","props","className","sectionName","sectionContent","CONSTANTS","DEDUCTION_MODE","STANDARD","ITEMIZED","FILING_STATUS_VALUE","SINGLE","MARRIED_FILING_JOINTLY","MARRIED_FILING_SEPERATELY","HEAD_OF_HOUSEHOLD","QUALIFIED_WIDOW","DEPENDANTS_CLAIM_STATUS","YES","NO","OTHER_DEDUCTIONS_STATUS","InputNumber","inputElementToRender","descriptionToLabel","this","description","name","isCurrency","type","inputMode","id","inputId","value","onChange","maxLength","size","min","max","maxValue","htmlFor","React","Component","defaultProps","RadioGroup","radiosAndLabels","radioGroupData","items","map","item","index","elementID","groupName","key","checked","currentValue","handleChange","radioData_DeductionMode","deductionMode","changeDeductionMode","changeItemizedDeduction","itemizedDeductionValue","radioData_DependantsClaimStatus","dependantsClaimStatus","changeDependantsClaimStatus","changeNumberOfDependantChildren","numberOfDependantChildren","changeNumberOfDependantRelatives","numberOfDependantRelatives","radioData_FilingStatus","filingStatus","changeFilingStatus","changeWages","wages","changeTaxWithhold","taxWithhold","changeWagesSpouse","wagesSpouse","changeTaxWithholdSpouse","taxWithholdSpouse","RadioData_OtherDeductionsStatus","otherDeductionsStatus","changeOtherDeductionsStatus","changePreTaxDeductions","preTaxDeductions","changeTaxCreditsDeductions","taxCreditsDeductions","convertToCurrency","allowNegativeValues","toString","isNegativeValue","charAt","replace","convertToValidNumber","event","returnValue","target","isNaN","console","warn","parseInt","debug","convertStringToNumber","parseFloat","colors","primaryColor","primaryLightColor","primaryDarkColor","onPrimaryColor","onPrimaryLightColor","onPrimaryDarkColor","secondaryColor","secondaryLightColor","secondaryDarkColor","onSecondaryColor","onSecondaryLightColor","onSecondaryDarkColor","errorColor","onErrorColor","GraphRenderer","graphDataSetTaxDue","graphDataSetNetIncome","domainPadding","x","y","padding","left","right","bottom","top","containerComponent","labels","datum","labelComponent","dy","constrainToVisibleArea","orientation","gutter","style","border","stroke","colorScale","data","crossAxis","label","axis","axisLabel","fontSize","fill","tickLabels","grid","tick","opacity","strokeDasharray","dependentAxis","interpolation","animate","duration","onLoad","balance","symbol","strokeWidth","totalIncome","Math","floor","totalTaxDue","resultMessage","utils","shouldRenderMessageForNonRefundableTaxCredits","abs","shouldRenderGraph","length","error","AGI","totalTaxWithheld","taxBracket","toFixed","effectiveTaxRate","messageForNonRefundableTaxCredits","window","debugMode","log","apply","arguments","graphDataSetGenerator","currentTaxModel","objectToReturn","datasetTaxDue","datasetNetIncome","trace","logger","model","clone","recalculate","startPointIncome","getTotalIncome","iter","candidateForStartPointIncome","addedCurrentIncome","endPointIncome","currentIncome","setWagesSpouse","setWages","taxesDue","getTotalTaxDue","push","taxBrackets","taxRate10Perc","rate","from","to","taxRate12Perc","taxRate22Perc","taxRate24Perc","taxRate32Perc","taxRate35Perc","taxRate37Perc","Number","MAX_SAFE_INTEGER","keysForNumericProperties","keysForStringProperties","keysForInitialProperties","keysForExcludedProperties","standardDeductions","dependantsTaxCredit","taxModel2019","taxYear","startScreenValue","endScreenValue","taxableIncome","totalTaxesWithheld","taxBracketRate","newWages","newWagesSpouse","newTaxWithhold","newTaxWithholdSpouse","newFilingStatus","newDeductionMode","newNumberOfDependantChildren","newNumberOfDependantRelatives","newItemizedDeductionValue","newTaxCredits","newPreTaxDeductions","child","childRefundable","relative","newState","Object","entries","includes","stateOfModel","otherModel","groupCollapsed","deductionsValue","calcualteTaxesDue","taxCreditsValue","calculateTaxCredits","calculateBalance","groupEnd","currentAGI","keys","sort","i","bracketDiff","amountToUseForCalculation","result","getTaxCreditsForDependantRelatives","getTaxCreditsForDependantChildren","getRefundableTaxCreditsForDependantChildren","App","taxModel","state","getInitialState","bind","resetApp","calculateTaxes","initFromState","currentScreen","setState","formattedValue","undefined","newScreenValue","sectionToDisplay","generateArrayOfScreenSections","shouldRenderPrevButton","shoudlRenderNextButton","onClick","changeCurrentScreenValue","getTaxYear","generateArrayOfScreenSectionsTaxYear2019","arrayOfSections","getFilingStatusSection","getDeductionModeSection","getDependantsSection","getW2Section","getOtherDeductionsSection","getTaxResultsContainer","SectionContentFilingStatus","SectionContentDeductionMode","SectionContentDependants","SectionContentW2","SectionContentOtherDeductions","TaxResultsContainer","newTaxModel","hasTheSameInitialState","dataForGraphs","getMessageForNonRefundableTaxCredits","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.affada10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction DataEntrySection(props){\r\n    return(\r\n        <div className=\"data-entry-section\">\r\n            <div className=\"data-entry-section-header\">{props.sectionName}</div>\r\n              <div className=\"data-entry-section-content\">\r\n                {props.sectionContent}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DataEntrySection;","const CONSTANTS = {\r\n    DEDUCTION_MODE : {\r\n        STANDARD : \"standard\",\r\n        ITEMIZED : \"itemized\",\r\n    } ,\r\n    FILING_STATUS_VALUE : {\r\n        SINGLE: \"single\",\r\n        MARRIED_FILING_JOINTLY: \"MFJ\",\r\n        MARRIED_FILING_SEPERATELY: \"MFS\",\r\n        HEAD_OF_HOUSEHOLD: \"HOH\",\r\n        QUALIFIED_WIDOW: \"QW\"\r\n    },\r\n    DEPENDANTS_CLAIM_STATUS : {\r\n        YES: \"Yes\",\r\n        NO: \"No\"\r\n    },\r\n    OTHER_DEDUCTIONS_STATUS : {\r\n        YES: \"Yes\",\r\n        NO: \"No\"\r\n    }\r\n}\r\n\r\nexport default CONSTANTS;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//This component will render either as number input or currency input\r\nclass InputNumber extends React.Component{\r\n\r\n    \r\n\r\n    render(){\r\n        var inputElementToRender;\r\n        var descriptionToLabel = this.props.description ? this.props.description : this.props.name;\r\n        if(this.props.isCurrency){\r\n            //input styled as currency\r\n            inputElementToRender = \r\n            <input \r\n                type=\"text\" \r\n                inputMode=\"numeric\"\r\n                id={this.props.inputId}\r\n                name={this.props.name}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n                \r\n                maxLength={this.props.maxLength}\r\n                size={this.props.size}\r\n            >\r\n            </input>\r\n        }\r\n        else{\r\n            //input styled as whole number - positive integer\r\n            inputElementToRender =\r\n            <input \r\n                type=\"number\" \r\n                inputMode=\"numeric\"\r\n                id={this.props.inputId}\r\n                name={this.props.name} \r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n\r\n                min={0}\r\n                max={this.props.maxValue}\r\n                maxLength={this.props.maxLength}\r\n                size={this.props.size}\r\n            >\r\n            </input>\r\n        }\r\n\r\n        return (\r\n            <div id={this.props.id} className={\"input-text-number-container\"}>\r\n                <label className=\"label-for-text-input\" htmlFor={this.props.name}>{descriptionToLabel}</label>\r\n                {inputElementToRender}  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputNumber.defaultProps = {\r\n    isCurrency: false,\r\n    maxLength: 10,\r\n    maxValue: 10,\r\n    size: 10,\r\n}\r\n\r\nInputNumber.propTypes = {\r\n    value: PropTypes.any.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    inputId: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    size: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n    step: PropTypes.number,\r\n    isCurrency: PropTypes.bool,\r\n  };\r\n\r\n\r\n\r\n\r\nexport default InputNumber;","import React from 'react';\r\n\r\nfunction RadioGroup(props){\r\n\r\n    var radiosAndLabels = props.radioGroupData.items.map((item, index) => {\r\n        var elementID = props.radioGroupData.groupName +\"-\" + item.value;\r\n        return (\r\n            <div key={index} className={props.radioGroupData.groupName + \"-container radio-group-item\"}>     \r\n              <label htmlFor={elementID}>       \r\n                <input \r\n                    type=\"radio\" \r\n                    id={elementID}\r\n                    name={props.radioGroupData.name} \r\n                    checked={item.value === props.currentValue}\r\n                    onChange={props.handleChange}\r\n                    value={item.value}\r\n                />\r\n                <span className=\"radio-look\"></span>\r\n              {item.description}</label>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n    <div id={props.id} className={props.className}>\r\n        <div className={props.radioGroupData.groupName + \"-group-label radio-group-label\"}>{props.radioGroupData.description}</div>\r\n        <div id={props.radioGroupData.groupName + \"-group-label-items-wrapper\"} className=\"radio-group-radio-items-wrapper\">\r\n        {radiosAndLabels} \r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\nRadioGroup.defaultProps ={\r\n  groupName: \"sample-group-name\",\r\n  description: \"Sample radio button description: \",\r\n  items: [\r\n    {\r\n      value: \"second-item\",\r\n      description: \"First Item\"\r\n    },\r\n    {\r\n      value: \"second-item\",\r\n      description: \"Second Item\"\r\n    },\r\n  ]\r\n}\r\n\r\nexport default RadioGroup;","import React from 'react';\r\nimport CONSTANTS from './constants';\r\nimport InputNumber from './InputNumber';\r\nimport RadioGroup from './RadioGroup';\r\n\r\nvar radioData_DeductionMode = {\r\n    groupName: \"deduction-mode\",\r\n    description: \"Which deduction mode you want to use?\",\r\n    items: [\r\n      {\r\n        value: CONSTANTS.DEDUCTION_MODE.STANDARD,\r\n        description: \"Standard Deduction\"\r\n      },\r\n      {\r\n        value: CONSTANTS.DEDUCTION_MODE.ITEMIZED,\r\n        description: \"Itemized Deduction\"\r\n      },\r\n    ]\r\n  };\r\n  \r\n\r\nexport default function(props){\r\n    return(\r\n        <div>\r\n            <RadioGroup \r\n            id=\"deduction-mode-main-container\" \r\n            radioGroupData={radioData_DeductionMode} \r\n            currentValue={props.deductionMode} \r\n            handleChange={props.changeDeductionMode} \r\n            />\r\n            { //Render only if itemized deduction is selected\r\n              props.deductionMode === CONSTANTS.DEDUCTION_MODE.ITEMIZED &&\r\n              <InputNumber \r\n                id=\"itemized-deduction-container\" \r\n                name=\"input-itemized-deduction\" \r\n                description=\"Itemized deduction value: \" \r\n                inputId=\"input-itemized-deduction\" \r\n                onChange={props.changeItemizedDeduction} \r\n                value={props.itemizedDeductionValue} \r\n                isCurrency={true}\r\n                />  \r\n            }\r\n        </div>\r\n      );\r\n}","import React from 'react';\r\nimport CONSTANTS from './constants';\r\nimport InputNumber from './InputNumber';\r\nimport RadioGroup from './RadioGroup';\r\n\r\nvar radioData_DependantsClaimStatus = {\r\n    groupName: \"dependants-claim-status\",\r\n    description: \"Do you have depenedants to claim?\",\r\n    items: [\r\n      {\r\n        value: CONSTANTS.DEPENDANTS_CLAIM_STATUS.YES,\r\n        description: \"Yes\"\r\n      },\r\n      {\r\n        value: CONSTANTS.DEPENDANTS_CLAIM_STATUS.NO,\r\n        description: \"No\"\r\n      }\r\n    ]\r\n  }\r\n\r\nexport default function(props){\r\n    return(\r\n        <div>\r\n          <RadioGroup \r\n            id=\"dependants-claim-status-main-container\"  \r\n            radioGroupData={radioData_DependantsClaimStatus} \r\n            currentValue={props.dependantsClaimStatus} \r\n            handleChange={props.changeDependantsClaimStatus} \r\n          />\r\n            {//Render only if dependants claim status is yes, else if selected no then rest variables for children and relatives\r\n              props.dependantsClaimStatus === CONSTANTS.DEPENDANTS_CLAIM_STATUS.YES ?\r\n              <div className=\"dependants-number-main-container\">\r\n                <InputNumber \r\n                  id=\"dependants-number-children-container\" \r\n                  name=\"input-dependants-number-children\" \r\n                  description=\"Number of qualifying children: \" \r\n                  inputId=\"input-dependants-number-children\" \r\n                  onChange={props.changeNumberOfDependantChildren} \r\n                  value={props.numberOfDependantChildren}  \r\n                  maxValue={10}\r\n                />  \r\n                <InputNumber \r\n                  id=\"dependants-number-relatives-container\" \r\n                  name=\"input-dependants-number-relatives\" \r\n                  description=\"Number of qualifying relatives: \" \r\n                  inputId=\"input-dependants-number-relatives\" \r\n                  onChange={props.changeNumberOfDependantRelatives} \r\n                  value={props.numberOfDependantRelatives}  \r\n                  maxValue={10}\r\n                />  \r\n              </div>\r\n              :null\r\n            }\r\n        </div>\r\n      );\r\n}","import React from 'react';\r\nimport CONSTANTS from './constants';\r\nimport RadioGroup from './RadioGroup';\r\n\r\nvar radioData_FilingStatus = {\r\n    groupName: \"filing-status\",\r\n    description: \"What is your filing status?\",\r\n    items: [\r\n      {\r\n        value: CONSTANTS.FILING_STATUS_VALUE.SINGLE,\r\n        description: \"Single\"\r\n      },\r\n      {\r\n        value: CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_JOINTLY,\r\n        description: \"Married filing jointly\"\r\n      },\r\n      {\r\n        value: CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_SEPERATELY,\r\n        description: \"Married filing separately\"\r\n      },\r\n      {\r\n        value: CONSTANTS.FILING_STATUS_VALUE.HEAD_OF_HOUSEHOLD,\r\n        description: \"Head of household\"\r\n      },\r\n      {\r\n        value: CONSTANTS.FILING_STATUS_VALUE.QUALIFIED_WIDOW,\r\n        description: \"Qualifying widow(er)\"\r\n      },\r\n    ]\r\n  };\r\n  \r\n\r\nexport default function(props){\r\n    return(\r\n        <RadioGroup \r\n            id=\"filing-status-main-container\" \r\n            radioGroupData={radioData_FilingStatus} \r\n            currentValue={props.filingStatus} \r\n            handleChange={props.changeFilingStatus} \r\n        />\r\n      );\r\n}","import React from 'react';\r\nimport CONSTANTS from './constants';\r\nimport InputNumber from './InputNumber';\r\n\r\n\r\nexport default function(props){\r\n    return(\r\n        <div id=\"w2-info-container\">\r\n          <div id=\"w2-your-info\" className=\"w2-info\"> \r\n            <div className=\"w2-info-header\">YOUR W-2</div>\r\n            <InputNumber \r\n                id=\"wages-container\" \r\n                name=\"input-wages\" \r\n                description=\"Wages, tips and compensation: \" \r\n                inputId=\"input-wages\" \r\n                onChange={props.changeWages} \r\n                value={props.wages} \r\n                isCurrency={true}\r\n            />  \r\n            <InputNumber \r\n                id=\"tax-withhold-container\" \r\n                name=\"input-tax-withhold\" \r\n                description=\"Federal tax withhold: \" \r\n                inputId=\"input-tax-withhold\" \r\n                onChange={props.changeTaxWithhold} \r\n                value={props.taxWithhold} \r\n                isCurrency={true}\r\n            />  \r\n          </div>\r\n            {\r\n              //Render only if married filing jointlty\r\n              props.filingStatus === CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_JOINTLY &&\r\n              <div id=\"w2-spouse-info\" className=\"w2-info\"> \r\n                <div className=\"w2-info-header\">SPOUSE W-2</div>\r\n                <InputNumber \r\n                    id=\"wages-spouse-container\" \r\n                    name=\"input-wages-spouse\" \r\n                    description=\"Wages, tips and compensation: \" \r\n                    inputId=\"input-wages-spouse\" \r\n                    onChange={props.changeWagesSpouse} \r\n                    value={props.wagesSpouse} \r\n                    isCurrency={true}\r\n                />  \r\n                <InputNumber \r\n                    id=\"tax-withhold-spouse-container\" \r\n                    name=\"input-tax-withhold-spouse\" \r\n                    description=\"Federal tax withhold: \" \r\n                    inputId=\"input-tax-withhold-spouse\" \r\n                    onChange={props.changeTaxWithholdSpouse} \r\n                    value={props.taxWithholdSpouse} \r\n                    isCurrency={true}\r\n                />  \r\n              </div>                \r\n            }              \r\n        </div>\r\n      );\r\n}","import React from 'react';\r\nimport CONSTANTS from './constants';\r\nimport InputNumber from './InputNumber';\r\nimport RadioGroup from './RadioGroup';\r\n\r\nvar RadioData_OtherDeductionsStatus = {\r\n    groupName: \"other-deductions-status\",\r\n    description: \"Do you have any other deductions/tax credits?\",\r\n    items: [\r\n      {\r\n        value: CONSTANTS.OTHER_DEDUCTIONS_STATUS.YES,\r\n        description: \"Yes\"\r\n      },\r\n      {\r\n        value: CONSTANTS.OTHER_DEDUCTIONS_STATUS.NO,\r\n        description: \"No\"\r\n      }\r\n    ]\r\n  }\r\n\r\nexport default function(props){\r\n    return(\r\n        <div>\r\n            <RadioGroup \r\n                id=\"other-deductions-status-main-container\" \r\n                radioGroupData={RadioData_OtherDeductionsStatus} \r\n                currentValue={props.otherDeductionsStatus} \r\n                handleChange={props.changeOtherDeductionsStatus} \r\n            />\r\n            {//Render only if other deduction are selected\r\n            props.otherDeductionsStatus === CONSTANTS.OTHER_DEDUCTIONS_STATUS.YES &&\r\n            <div id=\"other-deductions-main-container\">\r\n                <div className=\"container-label\">Enter other deductions/tax credits:</div>\r\n                <InputNumber \r\n                    id=\"pre-tax-deductions-container\" \r\n                    name=\"input-pre-tax-deductions\" \r\n                    description=\"Other pre-tax deductions: \" \r\n                    inputId=\"input-pre-tax-deductions\" \r\n                    onChange={props.changePreTaxDeductions} \r\n                    value={props.preTaxDeductions} \r\n                    isCurrency={true}\r\n                />  \r\n                <InputNumber \r\n                    id=\"tax-credits-deductions-container\" \r\n                    name=\"input-tax-credits-deductions\" \r\n                    description=\"Tax credits: \" \r\n                    inputId=\"input-tax-credits-deductions\" \r\n                    onChange={props.changeTaxCreditsDeductions} \r\n                    value={props.taxCreditsDeductions} \r\n                    isCurrency={true}\r\n                />  \r\n            </div>\r\n          }  \r\n        </div>\r\n      );\r\n}","\r\n/*\r\nhelper functions\r\n*/\r\n\r\nexport function convertToCurrency(value, allowNegativeValues){\r\n  //console.log(\"convertToCurrency() received value \" + value);\r\n    value = value.toString();\r\n    if(value === \"\" || value === \"$\") return \"$0\";\r\n    var isNegativeValue = false;  \r\n  \r\n    //check if value is negative\r\n    if(allowNegativeValues && value.charAt(0) === \"-\"){\r\n      isNegativeValue = true;\r\n    }\r\n    \r\n    //remove decimal places (if there are any)\r\n    //value = value.indexOf('.') > 0 ? value.substring(0, value.indexOf('.')) : value ;\r\n    value = value.replace(/\\..*/,'');\r\n    // remove all characters that aren't digit\r\n    value = value.replace(/[^0-9]/g,'');  \r\n    // replace multiple zeros with a single one\r\n    value = value.replace(/^0+(.*)$/,'0$1');\r\n    // remove leading zero\r\n    value = value.replace(/^0([^.].*)$/,'$1');    \r\n    //on tax returns we use only full dollar values and omit cents.\r\n    value = formatNumber(value);\r\n  \r\n    //add curency symbol\r\n    value = \"$\" + value;\r\n    value = isNegativeValue ? \"-\"+value : value;\r\n  \r\n   // console.log(\"converted value is: \" + value);\r\n    return value;\r\n  }\r\n  \r\nexport  function formatNumber(n) {\r\n    // format number 1000000 to 1,234,567\r\n    return n.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  }\r\n  \r\nexport function removeLeadingZeros(number){\r\n    // remove all characters that aren't digit\r\n    number = number.replace(/[^0-9]/g,'');  \r\n    // replace multiple zeros with a single one\r\n    number = number.replace(/^0+(.*)$/,'0$1');\r\n    return number;\r\n  }\r\n  \r\nexport function convertToValidNumber(event){\r\n    //check if event's target value is number\r\n    var returnValue = event.target.value;\r\n    if(returnValue === \"\") return 0;\r\n    if(isNaN(returnValue)) {\r\n      console.warn(\"NaN - not a number passed to convertToValidNumber function...\");\r\n      return;\r\n    }\r\n    if(parseInt(returnValue) > parseInt(event.target.max) || parseInt(returnValue) < parseInt(event.target.min)){\r\n      console.debug(\"user attempted to enter value beyond allowed range. Min=\" + event.target.min + \", max=\" + event.target.max + \", user enter value=\" + returnValue);\r\n      return;\r\n    }\r\n    return parseInt(returnValue).toString();\r\n  }\r\n\r\n  export function convertStringToNumber(value){\r\n    if(value === \"\") return 0;\r\n    //check if value is number\r\n    if(typeof value == \"number\"){\r\n      return value;\r\n    }\r\n    if(typeof value == \"string\"){\r\n      // remove all characters that aren't digit\r\n      value = value.replace(/[^0-9]/g,'');  \r\n      return parseFloat(value);\r\n    }\r\n  }\r\n","var colors = {\r\n    primaryColor: \"#0d47a1\",\r\n    primaryLightColor: \"#5472d3\",\r\n    primaryDarkColor: \"#002171\",\r\n    onPrimaryColor: \"#FFFFFF\",\r\n    onPrimaryLightColor: \"#000000\",\r\n    onPrimaryDarkColor: \"#f1f8e9\",\r\n  \r\n    secondaryColor: \"#689f38\",\r\n    secondaryLightColor: \"#99d066\",\r\n    secondaryDarkColor: \"#387002\",\r\n    onSecondaryColor: \"#FFFFFF\",\r\n    onSecondaryLightColor: \"#000000\",\r\n    onSecondaryDarkColor: \"#FFFFFF\",\r\n  \r\n    errorColor: \"#B00020\",\r\n    onErrorColor: \"#FFFFFF\",\r\n  }\r\n\r\n  export default colors;","import React from 'react';\r\nimport colors from './colors';\r\nimport {VictoryChart, VictoryVoronoiContainer, VictoryLegend, VictoryAxis, VictoryScatter, VictoryTooltip, VictoryArea, } from 'victory'\r\n\r\n\r\nclass GraphRenderer extends React.Component{\r\n\r\nrender(){\r\n     \r\n    var graphDataSetTaxDue = this.props.graphDataSetTaxDue;\r\n    var graphDataSetNetIncome = this.props.graphDataSetNetIncome;\r\n\r\n   return (\r\n      <VictoryChart\r\n        domainPadding={{x: [0.5, 0.5], y: [0, 5]}}\r\n        padding={{\r\n          left: 50, \r\n          right: 25,\r\n          bottom: 25,\r\n          top: 50,\r\n        }}\r\n        containerComponent={\r\n          <VictoryVoronoiContainer           \r\n            labels={({ datum }) => `Gross Income: $${datum.x}, \\n ${datum.description} $${datum.y}`}\r\n            labelComponent={\r\n              <VictoryTooltip  dy={-7} constrainToVisibleArea />\r\n            }\r\n          />\r\n        }\r\n      >\r\n        <VictoryLegend x={120} y={10}\r\n          orientation=\"horizontal\"\r\n          gutter={20}\r\n          style={{ border: { stroke: colors.primaryDarkColor } }}\r\n          colorScale={[ colors.primaryLightColor, colors.secondaryLightColor]}\r\n          data={[\r\n            { name: \"Tax Due\" }, { name: \"Net Income\" }\r\n          ]}\r\n        />\r\n\r\n        <VictoryAxis crossAxis\r\n          label='Gross Income'\r\n          style={{\r\n            axis: {stroke: colors.primaryDarkColor},\r\n            axisLabel: {fontSize: 16, padding: 30, fill: colors.primaryDarkColor},\r\n            tickLabels: {fontSize: 12, padding: 8, fill: colors.primaryDarkColor},\r\n            grid: {\r\n              stroke: ({ tick }) => tick > 50000 ? colors.secondaryDarkColor : colors.primaryDarkColor ,\r\n              opacity: 0.5,\r\n              strokeDasharray: \"10, 5\",\r\n            }            \r\n          }}\r\n        />\r\n\r\n        <VictoryAxis dependentAxis crossAxis\r\n          //label='Amount [$]'\r\n          style={{\r\n            axis: {stroke: colors.primaryDarkColor},\r\n            axisLabel: {fontSize: 16, padding: 30, fill: colors.primaryDarkColor},\r\n            tickLabels: {fontSize: 12, padding: 8, fill: colors.primaryDarkColor},\r\n            grid: {\r\n              stroke: colors.primaryDarkColor, \r\n              opacity: 0.5,\r\n              strokeDasharray: \"10, 5\",\r\n            }\r\n          }}\r\n        />\r\n        \r\n        \r\n\r\n        \r\n        <VictoryArea\r\n          name = \"Net Income\"\r\n          interpolation=\"catmullRom\"\r\n          data={graphDataSetNetIncome}\r\n          style={{\r\n            data: { stroke: colors.secondaryColor, fill: colors.secondaryLightColor, opacity: 0.75, }\r\n          }}\r\n          //draw the line - animation\r\n          animate={{\r\n            duration: 500,\r\n            onLoad: { duration: 1000 }\r\n          }}\r\n        />\r\n\r\n        <VictoryArea\r\n            name = \"series-1\"\r\n            interpolation=\"catmullRom\"\r\n            data={graphDataSetTaxDue}\r\n            style={{\r\n              data: { stroke: colors.primaryColor , fill: colors.primaryLightColor, opacity: 0.75, }\r\n            }}\r\n            //draw the line - animation\r\n            animate={{\r\n              duration: 500,\r\n              onLoad: { duration: 1000 }\r\n            }}\r\n        />\r\n\r\n        {this.props.balance < 0 &&\r\n        //render only if balance is larger then zero - to avoid poorly looking graph\r\n        <VictoryScatter\r\n          symbol=\"star\"\r\n          size={7}\r\n          style={{ data: { \r\n            stroke: colors.primaryColor , \r\n            fill: colors.primaryLightColor,\r\n            strokeWidth: 2\r\n            } }}\r\n          data = {[{ x: this.props.totalIncome, y: Math.floor(this.props.totalTaxDue), description: \"Current Tax Due:\"  }]}        \r\n        />\r\n        }\r\n\r\n        {this.props.balance < 0 &&\r\n        //render only if balance is larger then zero - to avoid poorly looking graph\r\n        <VictoryScatter\r\n          symbol=\"star\"\r\n          size={7}\r\n          style={{ data: { \r\n            stroke: colors.secondaryColor, \r\n            fill: colors.secondaryLightColor,\r\n            strokeWidth: 2\r\n            } }}\r\n          data = {[{ x: this.props.totalIncome, y: Math.floor(this.props.totalIncome - this.props.totalTaxDue), description: \"Current Net Income:\" }]}        \r\n        />\r\n        }\r\n\r\n\r\n      </VictoryChart>\r\n   )\r\n  }\r\n}\r\n\r\nexport default GraphRenderer;","import React from 'react';\r\nimport * as utils from './utils';\r\nimport GraphRenderer from './GraphRenderer';\r\n\r\nexport default function(props){\r\n    var resultMessage = \"\"\r\n    if(props.balance > 0){\r\n      resultMessage =  `CONGRATULATIONS! Your estimated refund is: ${utils.convertToCurrency(props.balance)}`;\r\n    }\r\n    else if(props.balance < 0){\r\n      resultMessage = `Looks like you will owe ${utils.convertToCurrency(props.balance)} in taxes.`;\r\n    }\r\n    else{\r\n      resultMessage = \"Looks like you will be all square! Nothing to pay, but no refund either...\";\r\n    }\r\n    //Render only if absolute value of balance is different than absolute value of tax due\r\n    var shouldRenderMessageForNonRefundableTaxCredits =  (Math.abs(props.balance) < Math.abs(props.totalTaxDue)) ;\r\n    var shouldRenderGraph = false;\r\n    try {\r\n      //we need at least two data points to render graph\r\n      shouldRenderGraph = props.graphDataSetTaxDue.length > 1 && props.graphDataSetNetIncome.length > 1;\r\n    } catch (error) {\r\n      console.error(\"Unable to evaluate content of graphDataSetTaxDue & graphDataSetNetIncome\");\r\n    }\r\n\r\n    return(\r\n      <div id=\"results-container\">\r\n        <div id=\"results-container-header\">RESULTS</div>\r\n        <div id=\"results-container-content\">\r\n          <div className=\"results-row results-message\">\r\n          {resultMessage}\r\n          </div>\r\n          <div className=\"results-row\">\r\n            <div className=\"results-row-label\">Your total wages:</div>\r\n            <div className=\"results-row-value\">{utils.convertToCurrency(props.totalIncome, true)}</div>\r\n          </div>\r\n          <div className=\"results-row\">\r\n            <div className=\"results-row-label\">Your adjusted gross income:</div>\r\n            <div className=\"results-row-value\">{utils.convertToCurrency(props.AGI, true)}</div>\r\n          </div>\r\n          <div className=\"results-row\">\r\n            <div className=\"results-row-label\">Your total taxes withheld:</div>\r\n            <div className=\"results-row-value\">{utils.convertToCurrency(props.totalTaxWithheld, true)}</div>\r\n          </div>\r\n          <div className=\"results-row\">\r\n            <div className=\"results-row-label\">Your total taxes due: </div>\r\n            <div className=\"results-row-value\">{utils.convertToCurrency(props.totalTaxDue, true)}</div>\r\n          </div>\r\n          {\r\n            props.taxBracket > 0 ?\r\n              <div className=\"results-row\">\r\n                <div className=\"results-row-label\">Your tax bracket is: </div>\r\n                <div className=\"results-row-value\">{(props.taxBracket * 100).toFixed(0)} % </div>\r\n              </div>\r\n            : null\r\n          }\r\n          {\r\n            props.effectiveTaxRate > 0 ?\r\n              <div className=\"results-row\">\r\n                <div className=\"results-row-label\">Your effective tax rate is: </div>\r\n                <div className=\"results-row-value\">{(props.effectiveTaxRate * 100).toFixed(0)} % </div>\r\n              </div>\r\n            : null\r\n          }\r\n          <div className=\"results-row\">\r\n            <div className=\"results-row-label\">Your balance is: </div>\r\n            {\r\n              shouldRenderMessageForNonRefundableTaxCredits ?\r\n                <div className=\"results-row-value\">{utils.convertToCurrency(props.balance, true)}*</div>\r\n              :\r\n                <div className=\"results-row-value\">{utils.convertToCurrency(props.balance, true)}</div>\r\n            }\r\n          </div>\r\n\r\n            { shouldRenderMessageForNonRefundableTaxCredits ?\r\n              <div className=\"results-row\">\r\n                <div className=\"messageForNonRefundableTaxCredits\">\r\n                  *{props.messageForNonRefundableTaxCredits}\r\n                </div>\r\n              </div>\r\n              :null\r\n            }            \r\n        </div>\r\n        {\r\n          shouldRenderGraph ?\r\n            <div className=\"graph-container\">\r\n              <div id=\"graph-label\">\r\n                  Graph showing projections of your net income and taxes due based on changes in gross income.\r\n              </div>\r\n              <GraphRenderer \r\n                graphDataSetTaxDue={props.graphDataSetTaxDue} \r\n                graphDataSetNetIncome={props.graphDataSetNetIncome }  \r\n                balance={props.balance}\r\n                totalIncome={props.totalIncome}\r\n                totalTaxDue={props.totalTaxDue}\r\n              />\r\n            </div>\r\n          :null\r\n        }    \r\n      </div>\r\n      \r\n    );\r\n}","//Logging wrapper for regular logs. Warnings and errors shoudl be displayed in regular way\r\n//to activate via browser console enter: window.debugMode = true\r\nwindow.debugMode = false;\r\nvar log = function(){\r\n    if(window.debugMode){\r\n        console.log.apply(console, arguments);\r\n    }\r\n}\r\nvar logGroupCollapsed = function(){\r\n    if(window.debugMode){\r\n        console.groupCollapsed.apply(console, arguments);\r\n    }\r\n}\r\nvar logGroupEnd = function(){\r\n    if(window.debugMode){\r\n        console.groupEnd.apply(console, arguments);\r\n    }\r\n}\r\n\r\nexport {log, logGroupCollapsed, logGroupEnd };","\r\nimport * as logger from './logger';\r\n\r\nlet graphDataSetGenerator = function(currentTaxModel){\r\n    let objectToReturn = {\r\n        datasetTaxDue : [],\r\n        datasetNetIncome : []\r\n    }\r\n\r\n    //sanity check\r\n    if(!(currentTaxModel)){\r\n        console.error(\"graphDataSetGenerator: missing argument in function call. \");\r\n        console.trace();\r\n        return {};\r\n    }\r\n\r\n    //$10,000 as increment/decreament\r\n    const INCREMENT = 10000; \r\n    //Graph points to the left (and right) from the user set value for gross income \r\n    const NUM_OF_GRAPH_POINTS_TO_LEFT = 5;\r\n    const NUM_OF_GRAPH_POINTS_TO_RIGHT = 5;\r\n    logger.log(\"Generating dataset for graph...\");\r\n    //clone the model\r\n    let model = currentTaxModel.clone();\r\n    //need to recalculate first so all the variables are set (and you can get reliable value for total)\r\n    model.recalculate();\r\n    let income = model.getTotalIncome();\r\n    \r\n    /*\r\n    Get start point income for graph point (point with value all the way to the left)\r\n    Start point income should be more than zero (i.e. cannot be negtive).\r\n    */\r\n    let startPointIncome =  income;\r\n    for(let iter = NUM_OF_GRAPH_POINTS_TO_LEFT; iter >0 ; iter--){\r\n        let candidateForStartPointIncome = startPointIncome - INCREMENT;\r\n        if(candidateForStartPointIncome > 0){\r\n        startPointIncome = candidateForStartPointIncome\r\n        }\r\n        else{\r\n        //we already at zero or less - may as well break out of the loop\r\n        break;\r\n        }\r\n    }\r\n    startPointIncome = Math.floor(startPointIncome / INCREMENT) * INCREMENT;\r\n    logger.log(\"Start point income is: \" + startPointIncome);\r\n\r\n    /*\r\n    Go from start point income to endpoint income (from point most to the left to point most ot the right)\r\n    Place results in an array of objects, where each object has x and y values.\r\n    X is gross income, Y is taxes due.\r\n    */\r\n    let addedCurrentIncome = false;\r\n    let endPointIncome = startPointIncome + ((NUM_OF_GRAPH_POINTS_TO_LEFT + NUM_OF_GRAPH_POINTS_TO_RIGHT) * INCREMENT);\r\n    for(let currentIncome = startPointIncome; currentIncome <= endPointIncome ; currentIncome += INCREMENT){\r\n        //for sake of calculation assume that entire income comes from primary wages and spouse did not have income\r\n        if(currentIncome > 0){\r\n            model.setWagesSpouse(0);\r\n            model.setWages(currentIncome);\r\n            model.recalculate();\r\n            let taxesDue = Math.floor(model.getTotalTaxDue());\r\n            logger.log(\"Adding datapoint. Values: taxes due: \" + taxesDue + \", current income: \" + currentIncome);\r\n            if(taxesDue > 0){\r\n                //only add to points to display if tax due has positive value\r\n                objectToReturn.datasetTaxDue.push({x: currentIncome, y: taxesDue, description: \"Tax Due\"});\r\n                objectToReturn.datasetNetIncome.push({x: currentIncome, y: currentIncome-taxesDue, description: \"Net Income\"});\r\n            }\r\n            /*\r\n            add values for user entered data if they are within inverval of this and next iteration\r\n            Need to use values from this.taxModel, because state may have not updated and it may contain old value\r\n            */\r\n            if(!addedCurrentIncome && currentIncome < currentTaxModel.totalIncome && currentIncome + INCREMENT > currentTaxModel.totalIncome){\r\n                logger.log(\"Adding datapoint. Values: taxes due: \" + currentTaxModel.totalTaxDue + \", total income: \" + currentTaxModel.totalIncome);\r\n                addedCurrentIncome = true;\r\n                objectToReturn.datasetTaxDue.push({x:  currentTaxModel.totalIncome, y: Math.floor(currentTaxModel.totalTaxDue), description: \"Tax Due\"});\r\n                objectToReturn.datasetNetIncome.push({x:  currentTaxModel.totalIncome, y:  Math.floor(currentTaxModel.totalIncome - currentTaxModel.totalTaxDue), description: \"Net Income\"});\r\n            }\r\n        }\r\n    }    \r\n    if(objectToReturn.datasetTaxDue.length === 1 || objectToReturn.datasetNetIncome.length === 1){\r\n        //if there is only one data point then its insufficient to produce the graph. Clear the datasets, so we display blank graph instead of haphazar one.\r\n        objectToReturn.datasetTaxDue = [];\r\n        objectToReturn.datasetNetIncome = [];\r\n        return objectToReturn;\r\n    }\r\n\r\n    //return object containing objects with datapoint for graph\r\n    return objectToReturn;\r\n}\r\n\r\nexport default graphDataSetGenerator;","import CONSTANTS from './constants';\r\n\r\nvar taxBrackets = {};\r\ntaxBrackets[CONSTANTS.FILING_STATUS_VALUE.SINGLE] = {\r\n    taxRate10Perc : {\r\n        rate: 0.10,\r\n        from: 0,\r\n        to: 9700\r\n    },\r\n    taxRate12Perc : {\r\n        rate: 0.12,\r\n        from: 9701,\r\n        to: 39475\r\n    },\r\n    taxRate22Perc : {\r\n        rate: 0.22,\r\n        from: 39476,\r\n        to: 84200\r\n    },\r\n    taxRate24Perc : {\r\n        rate: 0.24,\r\n        from: 84201,\r\n        to: 160725\r\n    },\r\n    taxRate32Perc : {\r\n        rate: 0.32,\r\n        from: 160726,\r\n        to: 204100\r\n    },\r\n    taxRate35Perc : {\r\n        rate: 0.35,\r\n        from: 204101,\r\n        to: 510300\r\n    },\r\n    taxRate37Perc : {\r\n        rate: 0.37,\r\n        from: 510301,\r\n        to: Number.MAX_SAFE_INTEGER\r\n    },\r\n}\r\n\r\ntaxBrackets[CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_JOINTLY] = {\r\n    taxRate10Perc : {\r\n        rate: 0.10,\r\n        from: 0,\r\n        to: 19400\r\n    },\r\n    taxRate12Perc : {\r\n        rate: 0.12,\r\n        from: 19401,\r\n        to: 78950\r\n    },\r\n    taxRate22Perc : {\r\n        rate: 0.22,\r\n        from: 78951,\r\n        to: 168400\r\n    },\r\n    taxRate24Perc : {\r\n        rate: 0.24,\r\n        from: 168401,\r\n        to: 321450\r\n    },\r\n    taxRate32Perc : {\r\n        rate: 0.32,\r\n        from: 324451,\r\n        to: 408200\r\n    },\r\n    taxRate35Perc : {\r\n        rate: 0.35,\r\n        from: 408201,\r\n        to: 612350\r\n    },\r\n    taxRate37Perc : {\r\n        rate: 0.37,\r\n        from: 612351,\r\n        to: Number.MAX_SAFE_INTEGER\r\n    },\r\n}\r\n\r\ntaxBrackets[CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_SEPERATELY] = {\r\n    taxRate10Perc : {\r\n        rate: 0.10,\r\n        from: 0,\r\n        to: 9700\r\n    },\r\n    taxRate12Perc : {\r\n        rate: 0.12,\r\n        from: 9701,\r\n        to: 39475\r\n    },\r\n    taxRate22Perc : {\r\n        rate: 0.22,\r\n        from: 39476,\r\n        to: 84200\r\n    },\r\n    taxRate24Perc : {\r\n        rate: 0.24,\r\n        from: 84201,\r\n        to: 160725\r\n    },\r\n    taxRate32Perc : {\r\n        rate: 0.32,\r\n        from: 160726,\r\n        to: 204100\r\n    },\r\n    taxRate35Perc : {\r\n        rate: 0.35,\r\n        from: 204101,\r\n        to: 306175\r\n    },\r\n    taxRate37Perc : {\r\n        rate: 0.37,\r\n        from: 306176,\r\n        to: Number.MAX_SAFE_INTEGER\r\n    },\r\n}\r\n\r\ntaxBrackets[CONSTANTS.FILING_STATUS_VALUE.HEAD_OF_HOUSEHOLD] = {\r\n    taxRate10Perc : {\r\n        rate: 0.10,\r\n        from: 0,\r\n        to: 13850\r\n    },\r\n    taxRate12Perc : {\r\n        rate: 0.12,\r\n        from: 13851,\r\n        to: 52850\r\n    },\r\n    taxRate22Perc : {\r\n        rate: 0.22,\r\n        from: 52851,\r\n        to: 84200\r\n    },\r\n    taxRate24Perc : {\r\n        rate: 0.24,\r\n        from: 84201,\r\n        to: 160700\r\n    },\r\n    taxRate32Perc : {\r\n        rate: 0.32,\r\n        from: 160701,\r\n        to: 204100\r\n    },\r\n    taxRate35Perc : {\r\n        rate: 0.35,\r\n        from: 204101,\r\n        to: 510300\r\n    },\r\n    taxRate37Perc : {\r\n        rate: 0.37,\r\n        from: 510301,\r\n        to: Number.MAX_SAFE_INTEGER\r\n    },\r\n}\r\n\r\n\r\nexport default taxBrackets;","import * as utils from './utils';\r\nimport CONSTANTS from './constants';\r\nimport taxBrackets from './taxBrackets2019';\r\nimport * as logger from './logger';\r\n\r\nvar keysForNumericProperties = ['numberOfDependantChildren', 'numberOfDependantRelatives', \r\n    'itemizedDeductionValue', 'wages', 'taxWithhold', 'wagesSpouse', 'taxWithholdSpouse', 'preTaxDeductions', 'taxCreditsDeductions'];\r\nvar keysForStringProperties = ['filingStatus', 'deductionMode', 'dependantsClaimStatus', 'otherDeductionsStatus'];\r\n\r\nvar keysForInitialProperties = ['numberOfDependantChildren', 'numberOfDependantRelatives', \r\n'itemizedDeductionValue', 'wages', 'taxWithhold', 'wagesSpouse', 'taxWithholdSpouse', 'preTaxDeductions', \r\n'taxCreditsDeductions', 'filingStatus', 'deductionMode', 'dependantsClaimStatus', 'otherDeductionsStatus'];\r\n\r\n//keys for valid state properties, that are not used by model\r\nvar keysForExcludedProperties = ['totalIncome', 'AGI', 'totalTaxWithheld', 'totalTaxDue', 'balance', 'graphDataSet', \r\n'graphDataSetTaxDue', 'graphDataSetNetIncome', 'currentScreen', 'messageForNonRefundableTaxCredits', 'effectiveTaxRate',  'taxBracket'];\r\n\r\n\r\n\r\n//Define standard deductions values for tax year 2019\r\nvar standardDeductions = {};\r\nstandardDeductions[CONSTANTS.FILING_STATUS_VALUE.SINGLE] = 12200;\r\nstandardDeductions[CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_JOINTLY] = 24400;\r\nstandardDeductions[CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_SEPERATELY] = 12200;\r\nstandardDeductions[CONSTANTS.FILING_STATUS_VALUE.HEAD_OF_HOUSEHOLD] = 18350;\r\nstandardDeductions[CONSTANTS.FILING_STATUS_VALUE.QUALIFIED_WIDOW] = 24400;\r\n\r\n//Define deduction value for type of dependant\r\nvar dependantsTaxCredit = {};\r\ndependantsTaxCredit.child = 2000;\r\ndependantsTaxCredit.childRefundable = 1400;\r\ndependantsTaxCredit.relative = 500; \r\n\r\n\r\n\r\n\r\n\r\n\r\nclass taxModel2019{            \r\n    \r\n    constructor(){\r\n\r\n        //fixed variables indentifying model\r\n        this.taxYear = 2019;\r\n        this.startScreenValue = 0;\r\n        this.endScreenValue = 5;\r\n\r\n        //basic variables used for calculations\r\n        this.wages = 0;\r\n        this.wagesSpouse = 0;\r\n        this.taxWithhold = 0;\r\n        this.taxWithholdSpouse = 0;\r\n\r\n        this.totalIncome = 0;\r\n        this.taxableIncome = 0;\r\n        this.totalTaxesWithheld = 0;\r\n        this.totalTaxDue = 0;\r\n        this.balance = 0;\r\n        this.taxBracketRate = 0;\r\n        this.effectiveTaxRate = 0;\r\n\r\n        this.deductionMode = CONSTANTS.DEDUCTION_MODE.STANDARD;\r\n        this.filingStatus = CONSTANTS.FILING_STATUS_VALUE.SINGLE;\r\n\r\n        this.numberOfDependantChildren = 0;\r\n        this.numberOfDependantRelatives = 0;\r\n        this.itemizedDeductionValue = 0;\r\n        this.taxCreditsDeductions = 0;\r\n        this.preTaxDeductions = 0;\r\n        \r\n    }\r\n\r\n    //Setters\r\n    setWages(newWages){\r\n        this.wages = utils.convertStringToNumber(newWages);\r\n    }\r\n\r\n    setWagesSpouse(newWagesSpouse){\r\n        this.wagesSpouse =  utils.convertStringToNumber(newWagesSpouse);\r\n    }\r\n\r\n    setTaxWithhold(newTaxWithhold){\r\n        this.taxWithhold = utils.convertStringToNumber(newTaxWithhold);\r\n    }\r\n    \r\n    setTaxWithholdSpouse(newTaxWithholdSpouse){\r\n        this.taxWithholdSpouse = utils.convertStringToNumber(newTaxWithholdSpouse);\r\n    }\r\n\r\n    setFilingStatus(newFilingStatus){ \r\n        this.filingStatus = newFilingStatus;\r\n    }\r\n\r\n    setDeductionMode(newDeductionMode){ \r\n        this.deductionMode = newDeductionMode;\r\n    }\r\n    \r\n    setNumberOfDependantChildren(newNumberOfDependantChildren){ \r\n        this.numberOfDependantChildren = newNumberOfDependantChildren;\r\n    }\r\n\r\n    setNumberOfDependantRelatives(newNumberOfDependantRelatives){ \r\n        this.numberOfDependantRelatives = newNumberOfDependantRelatives;\r\n    }\r\n\r\n    setItemizedDeductionValue(newItemizedDeductionValue){ \r\n        this.itemizedDeductionValue = newItemizedDeductionValue;\r\n    }\r\n\r\n    setTaxCredits(newTaxCredits){\r\n        this.taxCreditsDeductions = utils.convertStringToNumber(newTaxCredits);\r\n    }\r\n\r\n    setPreTaxDeductions(newPreTaxDeductions){\r\n        this.preTaxDeductions = utils.convertStringToNumber(newPreTaxDeductions);\r\n    }\r\n\r\n\r\n    //getters\r\n    getTaxCreditsForDependantChildren(){\r\n        return dependantsTaxCredit.child * this.numberOfDependantChildren;\r\n    }\r\n    getRefundableTaxCreditsForDependantChildren(){\r\n        return dependantsTaxCredit.childRefundable * this.numberOfDependantChildren;\r\n    }\r\n\r\n    getTaxCreditsForDependantRelatives(){\r\n        return dependantsTaxCredit.relative * this.numberOfDependantRelatives;\r\n    }\r\n\r\n    getTotalIncome(){ return this.totalIncome; }\r\n\r\n    getTotalTaxDue(){ return this.totalTaxDue; }\r\n\r\n    getWages(){ return this.wages; }\r\n\r\n    getWagesSpouse(){ return this.wagesSpouse; }\r\n\r\n    getTaxBracketRate(){ return this.taxBracketRate; }\r\n\r\n    //this will be in the future interface method\r\n    getTaxYear(){\r\n        return this.taxYear;\r\n    }\r\n\r\n\r\n    /*\r\n    Parses state to create members variables /object properties with the same keys. \r\n    Depends on the globally defined set of string and numeric keys. Logs warning if property key is found that does not belong to any of these two sets.\r\n    */\r\n   initFromState(newState){\r\n        //Validate properties of newState        \r\n        for (let [key, value] of Object.entries(newState)) {\r\n            if( !keysForNumericProperties.includes(key) && !keysForStringProperties.includes(key) && !keysForExcludedProperties.includes(key)){\r\n                console.warn(\"Unexpected property found during parsing the state. Property key is \" + key + \" and has value \" + value);\r\n            }                 \r\n        }\r\n\r\n        //set variables from state\r\n        this.wages = utils.convertStringToNumber(newState.wages);\r\n        this.wagesSpouse = utils.convertStringToNumber(newState.wagesSpouse);\r\n        this.taxWithhold = utils.convertStringToNumber(newState.taxWithhold);\r\n        this.taxWithholdSpouse = utils.convertStringToNumber(newState.taxWithholdSpouse);\r\n\r\n        this.filingStatus = newState.filingStatus;\r\n        this.deductionMode = newState.deductionMode;\r\n\r\n        //parse variables for credits and deductions\r\n        this.numberOfDependantChildren = utils.convertStringToNumber(newState.numberOfDependantChildren);\r\n        this.numberOfDependantRelatives = utils.convertStringToNumber(newState.numberOfDependantRelatives);\r\n        this.itemizedDeductionValue = utils.convertStringToNumber(newState.itemizedDeductionValue);\r\n        this.taxCreditsDeductions = utils.convertStringToNumber(newState.taxCreditsDeductions);\r\n        this.preTaxDeductions = utils.convertStringToNumber(newState.preTaxDeductions);\r\n    }\r\n\r\n    printoutModel(){\r\n        logger.log(this.stateOfModel);\r\n    }\r\n\r\n    getState(){\r\n        return this.stateOfModel;\r\n    }\r\n\r\n    hasTheSameInitialState(otherModel){\r\n        if(!(otherModel instanceof taxModel2019)){\r\n            console.warn(\"TaxModel2019.hasTheSameInitialState(): Object supplied in argument is not an instance of taxModel2019\");\r\n            return false;\r\n        }\r\n\r\n        //assuming no particular order is preserved between properties of original object and compared\r\n        for (let key of keysForInitialProperties) {\r\n            if(this[key] !== otherModel[key]){\r\n                logger.log(`TaxModel2019.hasTheSameInitialState(): Objects are different. Mismatch found in key: '${key}'. Old Model value: '${this[key]}', new Model value: '${otherModel[key]}' `);\r\n                return false;\r\n            }             \r\n        }\r\n        logger.log(\"TaxModel2019.hasTheSameInitialState(): Objects are the same\");\r\n        return true;\r\n    }\r\n\r\n    clone(){\r\n        let model = new taxModel2019();\r\n        for (let key of keysForInitialProperties) {\r\n            model[key] = this[key];\r\n        }\r\n        return model;\r\n    }\r\n\r\n\r\n    recalculate(){      \r\n        logger.logGroupCollapsed(\"taxModel2019.recalculate() group:\");\r\n        //total wages are considered from both spouses only if they are filing jointly\r\n        if(this.filingStatus === CONSTANTS.FILING_STATUS_VALUE.MARRIED_FILING_JOINTLY){\r\n            this.totalIncome = this.wages + this.wagesSpouse;\r\n            this.totalTaxesWithheld = this.taxWithhold + this.taxWithholdSpouse;\r\n        }\r\n        else{\r\n            this.totalIncome = this.wages;\r\n            this.totalTaxesWithheld = this.taxWithhold;\r\n        }\r\n        logger.log(\"Total Income: \" + this.totalIncome);\r\n\r\n\r\n        //calculate pre-tax deductions:standard or itemized deduction, and other deductions\r\n        var deductionsValue = 0;\r\n        if(this.deductionMode === CONSTANTS.DEDUCTION_MODE.STANDARD){\r\n            deductionsValue += standardDeductions[this.filingStatus];\r\n        }\r\n        else if(this.deductionMode === CONSTANTS.DEDUCTION_MODE.ITEMIZED){\r\n            deductionsValue += this.itemizedDeductionValue;\r\n        }\r\n        else{\r\n            console.error(\"Unsupported deduction mode selcted: \" + this.deductionMode);\r\n        }\r\n\r\n        deductionsValue += this.preTaxDeductions;\r\n\r\n        logger.log(\"Total amount for deductions is currently: \" + deductionsValue);\r\n        //add other pre-tax deductions as specified by user\r\n        \r\n\r\n        //calculate taxable income (if less than zero then change to zero)\r\n        this.taxableIncome = this.totalIncome - deductionsValue;\r\n        if(this.taxableIncome < 0){\r\n            this.taxableIncome = 0;\r\n        }\r\n        logger.log(\"Taxable income value is \" + this.taxableIncome);\r\n\r\n        //calculate taxes due & tax bracket\r\n        this.calcualteTaxesDue();\r\n\r\n        //calculate tax credit for dependants + other tax credits\r\n        var taxCreditsValue = this.calculateTaxCredits();\r\n        \r\n        //update taxes due, by subtracting tax credits\r\n        this.totalTaxDue -= taxCreditsValue;\r\n        logger.log(\"Tax due after deducting tax credits: \" +this.totalTaxDue  );\r\n        //calculate balance\r\n\r\n        this.balance = this.calculateBalance();\r\n        \r\n        logger.log(\"Balance is: \" + this.balance);\r\n        /*calculate effective tax rate = Taxes Due (aka total tax) / Taxable Income (income before adjustments)\r\n        An individual's effective tax rate represents the average of all tax brackets that their income passes through \r\n        as well as the total of all deductions and credits that lower their total income to their taxable income.\r\n        */\r\n       this.effectiveTaxRate = 0;\r\n       if(this.totalIncome !== 0){\r\n        this.effectiveTaxRate = this.totalTaxDue / this.taxableIncome;\r\n       } \r\n       logger.log(\"Effective Tax Rate is : \" + this.effectiveTaxRate );\r\n       logger.logGroupEnd();\r\n    }\r\n\r\n    calcualteTaxesDue(){\r\n        var currentAGI = this.taxableIncome;\r\n        var taxesDue = 0;\r\n        var taxBracketRate = 0;\r\n        //specific tax bracket to filing status\r\n        var taxBracket = taxBrackets[this.filingStatus]; \r\n        var keys = Object.keys(taxBracket);\r\n        keys.sort();\r\n        taxBracketRate = taxBracket[keys[0]].rate;\r\n        //go from lowest tax bracket\r\n        for(let i=0; i < keys.length && currentAGI > 0; i++){\r\n            var key = keys[i];\r\n            var bracketDiff = taxBracket[key].to - taxBracket[key].from;\r\n            taxBracketRate =  taxBracket[key].rate;\r\n            //use bracket difference to calculate taxes in this bracket, or use remainder of currentAGI, whichever is smaller\r\n            var amountToUseForCalculation = Math.min(bracketDiff,currentAGI);\r\n            taxesDue += amountToUseForCalculation * taxBracket[key].rate;\r\n            currentAGI -= amountToUseForCalculation;\r\n        }\r\n        this.totalTaxDue = Math.floor(taxesDue);\r\n        this.taxBracketRate = taxBracketRate;\r\n        logger.log(\"Taxes due before applying credits: \" + this.totalTaxDue);\r\n        logger.log(\"Tax bracket rate: \" + this.taxBracketRate);\r\n    }\r\n\r\n    calculateTaxCredits(){        \r\n        //calulate tax credits based on dependants\r\n        var result = 0;\r\n        result += this.getTaxCreditsForDependantRelatives();\r\n        result += this.getTaxCreditsForDependantChildren();\r\n        result += this.taxCreditsDeductions;\r\n        logger.log(\"Total tax credits are: \" + result);\r\n        return result;\r\n    }\r\n\r\n    //negative balance means you own taxes, positive balance means you get refund\r\n    calculateBalance(){\r\n        var result = this.totalTaxesWithheld - this.totalTaxDue;\r\n        /*\r\n        business logic: only tax credits for child is refundable up to $1400 \r\n        (so if person makes $0 this year they can only get refund up to $1400 for each child).        \r\n        */\r\n       \r\n        //substract non-refundable credit = up to zero\r\n        if(result > 0 && this.getTaxCreditsForDependantRelatives() > 0){\r\n            result -= this.getTaxCreditsForDependantRelatives();\r\n            //if after this reduction it gets negative we set it to zero\r\n            if(result < 0){\r\n                result = 0;\r\n            }\r\n        }\r\n        //substract non-refundable credit = up to zero. For each child only $1400 is refundable\r\n        if(result > 0 && this.getTaxCreditsForDependantChildren() > 0){\r\n            //maximize tax credit, by using all refundable tax credits\r\n            var nonrefundable = this.getTaxCreditsForDependantChildren() - this.getRefundableTaxCreditsForDependantChildren();\r\n            result -= nonrefundable;\r\n            if(result < 0){\r\n                result = 0;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getMessageForNonRefundableTaxCredits(){\r\n        return \"In tax year 2019 only tax credits for dependant children are refundable up to $1400 per each child. Therefore your expected refund (negative value of total tax due) and actual refund (balance) are different.\"\r\n    }\r\n}\r\nexport default taxModel2019;","import React from 'react';\nimport './App.scss';\nimport DataEntrySection from './DataEntrySection';\nimport SectionContentDeductionMode from './SectionContentDeductionMode';\nimport SectionContentDependants from './SectionContentDependants';\nimport SectionContentFilingStatus from './SectionContentFilingStatus';\nimport SectionContentW2 from './SectionContentW2';\nimport SectionContentOtherDeductions from './SectionContentOtherDeductions';\nimport TaxResultsContainer from './TaxResultsContainer';\n\nimport CONSTANTS from './constants';\nimport * as utils from './utils';\nimport * as logger from './logger';\n\nimport graphDataSetGenerator from './graphDataSetGenerator';\nimport taxModel2019 from './taxModel2019';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.taxModel = new taxModel2019();\n    //set constants - in future they can be specified for each tax model year\n    this.startScreenValue = this.taxModel.startScreenValue;\n    this.endScreenValue = this.taxModel.endScreenValue;\n\n    this.state = this.getInitialState();\n    this.changeFilingStatus = this.changeFilingStatus.bind(this);\n    this.changeDeductionMode = this.changeDeductionMode.bind(this);\n    this.changeItemizedDeduction = this.changeItemizedDeduction.bind(this);    \n    this.changeDependantsClaimStatus = this.changeDependantsClaimStatus.bind(this);\n    this.changeNumberOfDependantChildren = this.changeNumberOfDependantChildren.bind(this);\n    this.changeNumberOfDependantRelatives = this.changeNumberOfDependantRelatives.bind(this);\n    this.changeWages = this.changeWages.bind(this);\n    this.changeTaxWithhold = this.changeTaxWithhold.bind(this);\n    this.changeWagesSpouse = this.changeWagesSpouse.bind(this);\n    this.changeTaxWithholdSpouse = this.changeTaxWithholdSpouse.bind(this);\n    this.changePreTaxDeductions = this.changePreTaxDeductions.bind(this);\n    this.changeTaxCreditsDeductions = this.changeTaxCreditsDeductions.bind(this);\n    this.changeOtherDeductionsStatus = this.changeOtherDeductionsStatus.bind(this);\n    this.resetApp = this.resetApp.bind(this);\n    //this.changeCurrentScreenValue = this.changeCurrentScreenValue.bind(this);\n    this.calculateTaxes = this.calculateTaxes.bind(this);\n    \n    //initialize model\n    this.taxModel.initFromState(this.state);\n  }\n\n  //method returning object used for setting initial state and reseting the app\n  getInitialState(){\n    return {\n      filingStatus: CONSTANTS.FILING_STATUS_VALUE.SINGLE,\n      deductionMode: CONSTANTS.DEDUCTION_MODE.STANDARD,\n      //Need to use input value as String instead of number. This is because of React bug 9402->https://github.com/facebook/react/issues/9402\n      numberOfDependantChildren: \"0\",       \n      numberOfDependantRelatives: \"0\",  \n      itemizedDeductionValue: \"$0\",\n      wages: \"$0\",\n      taxWithhold: \"$0\",\n      wagesSpouse: \"$0\",\n      taxWithholdSpouse: \"$0\",\n      dependantsClaimStatus: CONSTANTS.DEPENDANTS_CLAIM_STATUS.NO,\n      preTaxDeductions: \"$0\",\n      taxCreditsDeductions: \"$0\",\n      otherDeductionsStatus: CONSTANTS.OTHER_DEDUCTIONS_STATUS.NO,\n      //variables used for results\n      totalIncome: 0,\n      AGI: 0,\n      totalTaxWithheld: 0,\n      totalTaxDue: 0,\n      balance: 0,\n      taxBracket: 0,\n      effectiveTaxRate: 0,\n      graphDataSetTaxDue: [],\n      graphDataSetNetIncome: [],\n      currentScreen : this.startScreenValue,      \n    }\n  }\n\n  resetApp(){\n    this.setState(\n      this.getInitialState()\n    );\n  }\n\n  changeFilingStatus(event){\n    this.setState({\n      filingStatus: event.target.value\n    });\n  }\n  \n  changeDeductionMode(event){\n    this.setState({\n      deductionMode: event.target.value\n    });\n  }\n  \n  changeDependantsClaimStatus(event){\n    this.setState({\n      dependantsClaimStatus: event.target.value\n    });\n    if(this.state.dependantsClaimStatus === CONSTANTS.DEPENDANTS_CLAIM_STATUS.NO){\n      this.setState({\n        numberOfDependantChildren: \"0\",       \n        numberOfDependantRelatives: \"0\", \n      });\n    }    \n  }\n\n\n  changeItemizedDeduction(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      itemizedDeductionValue: formattedValue\n    });\n    if(this.state.deductionMode === CONSTANTS.DEDUCTION_MODE.STANDARD){\n      this.setState({\n        itemizedDeductionValue: \"$0\",\n      });\n    }\n  }\n\n  changeWages(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      wages: formattedValue\n    });\n  }\n\n  changeTaxWithhold(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      taxWithhold: formattedValue\n    });\n  }\n\n  changeWagesSpouse(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      wagesSpouse: formattedValue\n    });\n  }\n\n  changeTaxWithholdSpouse(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      taxWithholdSpouse: formattedValue\n    });\n  }\n\n  changeNumberOfDependantChildren(event){    \n    var value = utils.convertToValidNumber(event);\n    if(value !== undefined && value !== null){\n      this.setState({\n        numberOfDependantChildren: value\n      });\n    }    \n  } \n\n  changeNumberOfDependantRelatives(event){    \n    var value = utils.convertToValidNumber(event);\n    if(value !== undefined && value !== null){\n      this.setState({\n        numberOfDependantRelatives: value\n      });\n    }    \n  } \n\n  changeOtherDeductionsStatus(event){\n    this.setState({\n      otherDeductionsStatus: event.target.value\n    });\n  }\n\n  changePreTaxDeductions(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      preTaxDeductions: formattedValue\n    });\n  }\n\n  changeTaxCreditsDeductions(event){\n    var formattedValue = utils.convertToCurrency(event.target.value, true)\n    this.setState({\n      taxCreditsDeductions: formattedValue\n    });\n  }\n\n  changeCurrentScreenValue(newScreenValue){\n    //calculate taxes when you are on the last screen\n    if(newScreenValue === this.endScreenValue){\n      this.calculateTaxes();\n    }    \n\n    //update currentScreen variable\n    if(newScreenValue >= this.startScreenValue && newScreenValue <= this.endScreenValue){\n      this.setState({\n        currentScreen: newScreenValue,\n      })\n    }\n    else{\n      console.warn(\"Thwarted attempt to set newScreenValue that would exceeed maxScreenValue (in respect to screen number)\");\n    }    \n  }\n\n  \n  render(){    \n    let sectionsArray = this.generateArrayOfScreenSections();\n    let sectionToDisplay = sectionsArray[this.state.currentScreen];\n    let shouldRenderPrevButton = this.state.currentScreen > this.startScreenValue;\n    let shoudlRenderNextButton = this.state.currentScreen < this.endScreenValue;\n    \n\n    return (\n      <div id=\"App\">\n        <header className=\"App-header\">\n          TAX ESTIMATOR 2020\n        </header>\n        <main>\n          <div id=\"main-container\">\n            {\n              sectionToDisplay\n            }\n            <div id=\"controls-container\">\n              {\n                shouldRenderPrevButton &&\n                  <button onClick={() => this.changeCurrentScreenValue(this.state.currentScreen -1) } className=\"unselectable\">PREVIOUS</button>\n              }\n              {\n                shoudlRenderNextButton &&\n                  <button onClick={() => this.changeCurrentScreenValue(this.state.currentScreen +1) } className=\"unselectable\"> {this.state.currentScreen === this.endScreenValue-1 ? \"CALCULATE\" : \"NEXT\"} </button>\n              }\n              {\n                this.state.currentScreen === this.endScreenValue &&\n                  <button onClick={this.resetApp } className=\"unselectable\"> RESET </button>\n              }\n              \n            </div>        \n               \n          </div>\n        </main>\n        <footer>\n            This is not a tax advice regarding filing your tax returns. This webapplication provides only estimate. \n            <br/>\n            For advice regarding your taxes please conslut your CPA.\n            <br/>\n            Sebastian Tysler 2020©\n        </footer>         \n      </div>\n    );\n  }\n\n  generateArrayOfScreenSections(){\n    if(this.taxModel.getTaxYear() === 2019){\n      return this.generateArrayOfScreenSectionsTaxYear2019();\n    }\n    else{\n      console.error(\"Unknwon tax model. \")\n    }\n  }\n\n  generateArrayOfScreenSectionsTaxYear2019(){\n    let arrayOfSections = [];\n    arrayOfSections.push(this.getFilingStatusSection());\n    arrayOfSections.push(this.getDeductionModeSection());\n    arrayOfSections.push(this.getDependantsSection());\n    arrayOfSections.push(this.getW2Section());\n    arrayOfSections.push(this.getOtherDeductionsSection());\n    arrayOfSections.push(this.getTaxResultsContainer());\n    return arrayOfSections;\n  }\n\n  getFilingStatusSection(){\n    return(\n      <DataEntrySection sectionName=\"FILING STATUS\" sectionContent={\n        <SectionContentFilingStatus\n          filingStatus = {this.state.filingStatus}\n          changeFilingStatus = {this.changeFilingStatus}\n        />\n        } \n      />\n    );\n  }\n\n  getDeductionModeSection(){\n    return(\n      <DataEntrySection sectionName=\"DEDUCTION TYPE\" sectionContent={\n        <SectionContentDeductionMode\n          deductionMode = {this.state.deductionMode}\n          changeDeductionMode = {this.changeDeductionMode}\n          changeItemizedDeduction = {this.changeItemizedDeduction}\n          itemizedDeductionValue = {this.state.itemizedDeductionValue}\n        />\n        } \n      />\n    );\n  }\n\n  getDependantsSection(){\n    return(\n      <DataEntrySection sectionName=\"DEPENDANTS\" sectionContent={\n        <SectionContentDependants \n          dependantsClaimStatus = {this.state.dependantsClaimStatus}\n          changeDependantsClaimStatus = {this.changeDependantsClaimStatus}\n          changeNumberOfDependantChildren = {this.changeNumberOfDependantChildren}\n          numberOfDependantChildren = {this.state.numberOfDependantChildren}\n          changeNumberOfDependantRelatives = {this.changeNumberOfDependantRelatives}\n          numberOfDependantRelatives = {this.state.numberOfDependantRelatives}\n        />\n        } \n      /> \n    );\n  }\n\n  getW2Section(){\n    return(\n      <DataEntrySection sectionName=\"W2 INFO\" sectionContent={\n        <SectionContentW2 \n          changeWages = {this.changeWages}\n          wages = {this.state.wages}\n          changeTaxWithhold = {this.changeTaxWithhold}\n          taxWithhold = {this.state.taxWithhold}\n          filingStatus = {this.state.filingStatus}\n          changeWagesSpouse = {this.changeWagesSpouse}\n          wagesSpouse = {this.state.wagesSpouse}\n          changeTaxWithholdSpouse = {this.changeTaxWithholdSpouse}\n          taxWithholdSpouse = {this.state.taxWithholdSpouse}\n        />\n        } \n      /> \n    );\n  }\n\n  getOtherDeductionsSection(){\n    return(\n      <DataEntrySection sectionName=\"OTHER DEDUCTIONS\" sectionContent={\n        <SectionContentOtherDeductions\n          otherDeductionsStatus = {this.state.otherDeductionsStatus}\n          changeOtherDeductionsStatus = {this.changeOtherDeductionsStatus}\n          preTaxDeductions = {this.state.preTaxDeductions}\n          changePreTaxDeductions = {this.changePreTaxDeductions}\n          taxCreditsDeductions = {this.state.taxCreditsDeductions}\n          changeTaxCreditsDeductions = {this.changeTaxCreditsDeductions}\n        />\n        } \n      />\n    );\n  }\n\n  getTaxResultsContainer(){\n    return(\n      <TaxResultsContainer \n        balance = {this.state.balance}\n        totalIncome = {this.state.totalIncome}\n        AGI = {this.state.AGI}\n        totalTaxWithheld = {this.state.totalTaxWithheld}\n        totalTaxDue = {this.state.totalTaxDue}\n        taxBracket = {this.state.taxBracket}\n        effectiveTaxRate = {this.state.effectiveTaxRate}\n        graphDataSetTaxDue = {this.state.graphDataSetTaxDue}\n        graphDataSetNetIncome = {this.state.graphDataSetNetIncome}  \n        messageForNonRefundableTaxCredits = {this.state.messageForNonRefundableTaxCredits}          \n      />\n    );\n  }\n\n  calculateTaxes(){    \n    let newTaxModel = new taxModel2019();\n    newTaxModel.initFromState(this.state);\n    //update taxModel and recalculate - if there was a change in basic variables\n    if(!this.taxModel.hasTheSameInitialState(newTaxModel)){      \n      newTaxModel.recalculate();\n      logger.log(\"calculateTaxes() method called. newTaxModel has totalincome: \" + newTaxModel.getTotalIncome() + \", tax due: \" + newTaxModel.getTotalTaxDue());\n      //update graph data\n      let dataForGraphs = graphDataSetGenerator(newTaxModel);\n      this.setState({\n          balance : newTaxModel.balance,\n          totalIncome: newTaxModel.totalIncome,\n          AGI: newTaxModel.taxableIncome,\n          totalTaxWithheld: newTaxModel.totalTaxesWithheld,\n          totalTaxDue: newTaxModel.totalTaxDue,\n          taxBracket: newTaxModel.taxBracketRate,\n          effectiveTaxRate: newTaxModel.effectiveTaxRate,\n          graphDataSetTaxDue: dataForGraphs.datasetTaxDue,\n          graphDataSetNetIncome: dataForGraphs.datasetNetIncome,\n          messageForNonRefundableTaxCredits: newTaxModel.getMessageForNonRefundableTaxCredits(),\n        }    \n      );\n      this.taxModel = newTaxModel;\n    }\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}